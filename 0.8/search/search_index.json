{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Iter8 \u00b6","title":"Home"},{"location":"#iter8","text":"","title":"Iter8"},{"location":"community/","text":"Community meetings \u00b6 Everyone is welcome to join our community meetings. They are on the 3 rd Wednesday of each month from 11:00 AM \u2013 12:00 PM EST/EDT. Here is the meeting link . View the calendar or subscribe ( Google Calendar , iCalendar file ). Feel free to bring discussion topics to the meeting. If you would like to present a demo, please drop us a note in the Iter8 Slack workspace . Our meetings are also recorded and publicly available on our YouTube channel .","title":"Community"},{"location":"community/#community-meetings","text":"Everyone is welcome to join our community meetings. They are on the 3 rd Wednesday of each month from 11:00 AM \u2013 12:00 PM EST/EDT. Here is the meeting link . View the calendar or subscribe ( Google Calendar , iCalendar file ). Feel free to bring discussion topics to the meeting. If you would like to present a demo, please drop us a note in the Iter8 Slack workspace . Our meetings are also recorded and publicly available on our YouTube channel .","title":"Community meetings"},{"location":"contributing/","text":"Overview \u00b6 Welcome! We are delighted that you want to contribute to Iter8! \ud83d\udc96 As you get started, you are in the best position to give us feedback on areas of our project that we need help with including: Problems found during setup of Iter8 Gaps in our quick start tutorial and other documentation Bugs in our test and automation scripts If anything doesn't make sense, or doesn't work when you run it, please open a bug report and let us know! Ways to Contribute \u00b6 We welcome many different types of contributions including: Tutorials Other documentation Builds, CI Tasks from which experiments are composed Bug fixes Web design Communication, social media, blog posts Reviewing pull requests Ask for Help \u00b6 The best ways to reach us with a question is to ask... On the original GitHub issue In the #development channel in the Iter8 Slack workspace During our community meetings Find an Issue \u00b6 Iter8 issues are managed here . Issued labeled good first issue have extra information to help you make your first contribution. Issues labeled help wanted are issues suitable for someone who has already submitted their first pull request and is good to move on to the second one. Sometimes there won\u2019t be any issues with these labels. That\u2019s ok! There is likely still something for you to work on. If you want to contribute but you don\u2019t know where to start or can't find a suitable issue, you can reach out to us over the Iter8 Slack workspace for help finding something to work on. Once you see an issue that you'd like to work on, please post a comment saying that you want to work on it. Something like \"I want to work on this\" is fine. Pull Request Lifecycle \u00b6 Your PR is associated with one (and infrequently, with more than one) GitHub issue . You can start the submission of your PR as soon as this issue has been created. Follow the standard GitHub fork and pull request process when creating and submitting your PR. The associated GitHub issue might need to go through design discussions and may not be ready for development. Your PR might require new tests; these new or existing tests may not yet be running successfully. At this stage, keep your PR as a draft , to signal that it is not yet ready for review. Once design discussions are complete and tests pass, convert the draft PR into a regular PR to signal that it is ready for review. Additionally, post a message in the #development Slack channel of the Iter8 Slack workspace with a link to your PR. This will expedite the review. You can expect an initial review within 1-2 days of submitting a PR, and follow up reviews (if any) to happen over 2-5 days. Use the #development Slack channel of Iter8 Slack workspace to ping/bump when the pull request is ready for further review or if it appears stalled. Iter8 releases happen frequently. Once your PR is merged, you can expect your contribution to show up live in a short amount of time at https://iter8.tools . Sign Your Commits \u00b6 Licensing is important to open source projects. It provides some assurances that the software will continue to be available based under the terms that the author(s) desired. We require that contributors sign off on commits submitted to our project's repositories. The Developer Certificate of Origin (DCO) is a way to certify that you wrote and have the right to contribute the code you are submitting to the project. Read GitHub's documentation on signing your commits . You sign-off by adding the following to your commit messages. Your sign-off must match the Git user and email associated with the commit. This is my commit message Signed-off-by: Your Name <your.name@example.com> Git has a -s command line option to do this automatically: git commit -s -m 'This is my commit message' If you forgot to do this and have not yet pushed your changes to the remote repository, you can amend your commit with the sign-off by running: git commit --amend -s MkDocs \u00b6 Iter8 documentation uses Mkdocs . The section on linking to pages and images is especially useful for Iter8 documentation authors. Serve Iter8 docs \u00b6 Pre-requisite: Python 3+. Use a Python 3 virtual environment to locally serve Iter8 docs. Run the following commands from the top-level directory of the Iter8 repo. cd mkdocs python3 -m venv .venv source .venv/bin/activate pip install -r requirements.txt mkdocs serve -s Browse http://localhost:8000 to view your local Iter8 docs. View live changes \u00b6 The overall structure of the documentation, as reflected in the nav tabs of https://iter8.tools , is located in the iter8/mkdocs/mkdocs.yml file. The markdown files for Iter8 docs are located under the iter8/mkdocs/docs folder. You will see live updates to http://localhost:8000 as you update the above files.","title":"Contributing"},{"location":"contributing/#overview","text":"Welcome! We are delighted that you want to contribute to Iter8! \ud83d\udc96 As you get started, you are in the best position to give us feedback on areas of our project that we need help with including: Problems found during setup of Iter8 Gaps in our quick start tutorial and other documentation Bugs in our test and automation scripts If anything doesn't make sense, or doesn't work when you run it, please open a bug report and let us know!","title":"Overview"},{"location":"contributing/#ways-to-contribute","text":"We welcome many different types of contributions including: Tutorials Other documentation Builds, CI Tasks from which experiments are composed Bug fixes Web design Communication, social media, blog posts Reviewing pull requests","title":"Ways to Contribute"},{"location":"contributing/#ask-for-help","text":"The best ways to reach us with a question is to ask... On the original GitHub issue In the #development channel in the Iter8 Slack workspace During our community meetings","title":"Ask for Help"},{"location":"contributing/#find-an-issue","text":"Iter8 issues are managed here . Issued labeled good first issue have extra information to help you make your first contribution. Issues labeled help wanted are issues suitable for someone who has already submitted their first pull request and is good to move on to the second one. Sometimes there won\u2019t be any issues with these labels. That\u2019s ok! There is likely still something for you to work on. If you want to contribute but you don\u2019t know where to start or can't find a suitable issue, you can reach out to us over the Iter8 Slack workspace for help finding something to work on. Once you see an issue that you'd like to work on, please post a comment saying that you want to work on it. Something like \"I want to work on this\" is fine.","title":"Find an Issue"},{"location":"contributing/#pull-request-lifecycle","text":"Your PR is associated with one (and infrequently, with more than one) GitHub issue . You can start the submission of your PR as soon as this issue has been created. Follow the standard GitHub fork and pull request process when creating and submitting your PR. The associated GitHub issue might need to go through design discussions and may not be ready for development. Your PR might require new tests; these new or existing tests may not yet be running successfully. At this stage, keep your PR as a draft , to signal that it is not yet ready for review. Once design discussions are complete and tests pass, convert the draft PR into a regular PR to signal that it is ready for review. Additionally, post a message in the #development Slack channel of the Iter8 Slack workspace with a link to your PR. This will expedite the review. You can expect an initial review within 1-2 days of submitting a PR, and follow up reviews (if any) to happen over 2-5 days. Use the #development Slack channel of Iter8 Slack workspace to ping/bump when the pull request is ready for further review or if it appears stalled. Iter8 releases happen frequently. Once your PR is merged, you can expect your contribution to show up live in a short amount of time at https://iter8.tools .","title":"Pull Request Lifecycle"},{"location":"contributing/#sign-your-commits","text":"Licensing is important to open source projects. It provides some assurances that the software will continue to be available based under the terms that the author(s) desired. We require that contributors sign off on commits submitted to our project's repositories. The Developer Certificate of Origin (DCO) is a way to certify that you wrote and have the right to contribute the code you are submitting to the project. Read GitHub's documentation on signing your commits . You sign-off by adding the following to your commit messages. Your sign-off must match the Git user and email associated with the commit. This is my commit message Signed-off-by: Your Name <your.name@example.com> Git has a -s command line option to do this automatically: git commit -s -m 'This is my commit message' If you forgot to do this and have not yet pushed your changes to the remote repository, you can amend your commit with the sign-off by running: git commit --amend -s","title":"Sign Your Commits"},{"location":"contributing/#mkdocs","text":"Iter8 documentation uses Mkdocs . The section on linking to pages and images is especially useful for Iter8 documentation authors.","title":"MkDocs"},{"location":"contributing/#serve-iter8-docs","text":"Pre-requisite: Python 3+. Use a Python 3 virtual environment to locally serve Iter8 docs. Run the following commands from the top-level directory of the Iter8 repo. cd mkdocs python3 -m venv .venv source .venv/bin/activate pip install -r requirements.txt mkdocs serve -s Browse http://localhost:8000 to view your local Iter8 docs.","title":"Serve Iter8 docs"},{"location":"contributing/#view-live-changes","text":"The overall structure of the documentation, as reflected in the nav tabs of https://iter8.tools , is located in the iter8/mkdocs/mkdocs.yml file. The markdown files for Iter8 docs are located under the iter8/mkdocs/docs folder. You will see live updates to http://localhost:8000 as you update the above files.","title":"View live changes"},{"location":"news/","text":"News and Announcements \u00b6 Nov 2021: Iter8 at ACM Symposium on Cloud Computing. Full paper here Oct 2021: New Stack blog article by Hai Huang: Progressive Delivery on OpenShift Oct 2021: Iter8 at PREVAIL conference. Video coming soon. Conference details Oct 2021: New Stack blog article by Srinivasan Parthasarathy: Validate Service-Level Objectives of REST APIs Using Iter8 Jul 2021: Blog article by Clive Cox: ML\u200c \u200cProgressive\u200c \u200cRollouts\u200c \u200cwith\u200c \u200cSeldon\u200c \u200cand\u200c \u200cIter8\u200c Jul 2021: Iter8 at Knative meetup May 2021: Iter8 at KubeCon + CloudNativeCon Europe Mar 2021: Iter8 at Knative meetup Mar 2021: Kubeflow blog article by Animesh Singh and Dan Sun: Operationalize, Scale and Infuse Trust in AI Models using KFServing Oct 2020: Medium blog article by Michael Kalantar: Automated Canary Release of Microservices on Kubernetes using Tekton and iter8 Oct 2020: Medium blog article by Kusuma Chalasani: Better Performance with kruize and iter8 for your microservices application Oct 2020: Medium blog article by Srinivasan Parthasarathy: Automated Canary Release of TensorFlow Models on Kubernetes Oct 2020: Medium blog article by Sushma Ravichandran: Iter8: Take a look at the magic under the hood Aug 2020: Medium blog article by Fabio Oliveira: Iter8: Achieving Agility with Control","title":"News"},{"location":"news/#news-and-announcements","text":"Nov 2021: Iter8 at ACM Symposium on Cloud Computing. Full paper here Oct 2021: New Stack blog article by Hai Huang: Progressive Delivery on OpenShift Oct 2021: Iter8 at PREVAIL conference. Video coming soon. Conference details Oct 2021: New Stack blog article by Srinivasan Parthasarathy: Validate Service-Level Objectives of REST APIs Using Iter8 Jul 2021: Blog article by Clive Cox: ML\u200c \u200cProgressive\u200c \u200cRollouts\u200c \u200cwith\u200c \u200cSeldon\u200c \u200cand\u200c \u200cIter8\u200c Jul 2021: Iter8 at Knative meetup May 2021: Iter8 at KubeCon + CloudNativeCon Europe Mar 2021: Iter8 at Knative meetup Mar 2021: Kubeflow blog article by Animesh Singh and Dan Sun: Operationalize, Scale and Infuse Trust in AI Models using KFServing Oct 2020: Medium blog article by Michael Kalantar: Automated Canary Release of Microservices on Kubernetes using Tekton and iter8 Oct 2020: Medium blog article by Kusuma Chalasani: Better Performance with kruize and iter8 for your microservices application Oct 2020: Medium blog article by Srinivasan Parthasarathy: Automated Canary Release of TensorFlow Models on Kubernetes Oct 2020: Medium blog article by Sushma Ravichandran: Iter8: Take a look at the magic under the hood Aug 2020: Medium blog article by Fabio Oliveira: Iter8: Achieving Agility with Control","title":"News and Announcements"},{"location":"roadmap/","text":"Roadmap \u00b6 Examples for experimenting inside K8s A/B(/n) testing example Ability to run Iter8 experiments as a step in CI/CD/GitOps pipelines Auto triggering experiments read-external-metrics task recommend-traffic-split task Ability to run multiple loops of an experiment Iter8 experiments & progressive delivery for multi-cluster and edge cloud","title":"Roadmap"},{"location":"roadmap/#roadmap","text":"Examples for experimenting inside K8s A/B(/n) testing example Ability to run Iter8 experiments as a step in CI/CD/GitOps pipelines Auto triggering experiments read-external-metrics task recommend-traffic-split task Ability to run multiple loops of an experiment Iter8 experiments & progressive delivery for multi-cluster and edge cloud","title":"Roadmap"},{"location":"getting-started/concepts/","text":"What is Iter8? \u00b6 Kubernetes release optimizer built for DevOps and MLOps teams. What is an Iter8 experiment? \u00b6 Iter8 experiments make it simple to collect performance and business metrics for apps and ML models, assess, compare and validate multiple app/ML model versions, safely rollout the winning version, and maximize business value in each release. Experiment chart \u00b6 Experiment charts are specialized Helm charts that contain reusable experiment templates. Iter8 combines experiment charts with user supplied values to generate runnable experiment.yaml files. Iter8 Hub \u00b6 Iter8 hub is a specific location within in the Iter8 GitHub repo that hosts several pre-packaged and reusable charts. These charts enable to you to launch powerful release optimization experiments in seconds. Their usage is described in depth in various Iter8 tutorials . Features at a glance \u00b6 Load testing with SLOs Iter8 experiments can generate requests for HTTP and gRPC services, collect built-in latency and error-related metrics, and validate SLOs. A/B(/n) testing Grow your business with every release. Iter8 experiments can compare multiple versions based on business value and promote a winner. Simple to use Get started with Iter8 in seconds using pre-packaged experiment charts. Run Iter8 experiments locally, inside Kubernetes, or inside your CI/CD/GitOps pipelines. K8s app/serverless/ML frameworks Use with any app, serverless, or ML framework. Iter8 works with Kubernetes deployments, statefulsets, Knative services, KServe/Seldon ML deployments, or custom Kubernetes resource types. Implementation \u00b6 Iter8 is primarily written in go and builds on a few awesome open source projects including: Helm Fortio ghz plotly.js","title":"Concepts"},{"location":"getting-started/concepts/#what-is-iter8","text":"Kubernetes release optimizer built for DevOps and MLOps teams.","title":"What is Iter8?"},{"location":"getting-started/concepts/#what-is-an-iter8-experiment","text":"Iter8 experiments make it simple to collect performance and business metrics for apps and ML models, assess, compare and validate multiple app/ML model versions, safely rollout the winning version, and maximize business value in each release.","title":"What is an Iter8 experiment?"},{"location":"getting-started/concepts/#experiment-chart","text":"Experiment charts are specialized Helm charts that contain reusable experiment templates. Iter8 combines experiment charts with user supplied values to generate runnable experiment.yaml files.","title":"Experiment chart"},{"location":"getting-started/concepts/#iter8-hub","text":"Iter8 hub is a specific location within in the Iter8 GitHub repo that hosts several pre-packaged and reusable charts. These charts enable to you to launch powerful release optimization experiments in seconds. Their usage is described in depth in various Iter8 tutorials .","title":"Iter8 Hub"},{"location":"getting-started/concepts/#features-at-a-glance","text":"Load testing with SLOs Iter8 experiments can generate requests for HTTP and gRPC services, collect built-in latency and error-related metrics, and validate SLOs. A/B(/n) testing Grow your business with every release. Iter8 experiments can compare multiple versions based on business value and promote a winner. Simple to use Get started with Iter8 in seconds using pre-packaged experiment charts. Run Iter8 experiments locally, inside Kubernetes, or inside your CI/CD/GitOps pipelines. K8s app/serverless/ML frameworks Use with any app, serverless, or ML framework. Iter8 works with Kubernetes deployments, statefulsets, Knative services, KServe/Seldon ML deployments, or custom Kubernetes resource types.","title":"Features at a glance"},{"location":"getting-started/concepts/#implementation","text":"Iter8 is primarily written in go and builds on a few awesome open source projects including: Helm Fortio ghz plotly.js","title":"Implementation"},{"location":"getting-started/help/","text":"Get Help \u00b6 Read Iter8 docs . Join the Iter8 Slack workspace . File an issue or start a discussion on the Iter8 GitHub repo . Attend our community meetings!","title":"Get help"},{"location":"getting-started/help/#get-help","text":"Read Iter8 docs . Join the Iter8 Slack workspace . File an issue or start a discussion on the Iter8 GitHub repo . Attend our community meetings!","title":"Get Help"},{"location":"getting-started/install/","text":"Install Iter8 \u00b6 Brew Binaries Source Go 1.17+ Install the latest stable release of the Iter8 CLI using brew as follows. brew tap iter8-tools/iter8 brew install iter8 Install a specific version You can install the latest stable release of the Iter8 CLI with specific major and minor version numbers. For example, the following command installs the latest stable release of the Iter8 CLI with major 0 and minor 8 . brew tap iter8-tools/iter8 brew install iter8@0.8 Pre-compiled Iter8 binaries for many platforms are available here . Uncompress the iter8-X-Y.tar.gz archive for your platform, and move the iter8 binary to any folder in your PATH. Build Iter8 from source as follows. Go 1.17+ is a pre-requisite. # you can replace master with a specific tag such as v0.8.29 export REF = master https://github.com/iter8-tools/iter8.git?ref = $REF cd iter8 make install Install the latest stable release of the Iter8 CLI using go 1.17+ as follows. go install github.com/iter8-tools/iter8@latest You can now run iter8 (from your gopath bin/ directory) Install a specific version You can also install Iter8 CLI with a specific tag. For example, the following command installs version 0.8.29 of the Iter8 CLI. go install github.com/iter8-tools/iter8@v0.8.29","title":"Install Iter8"},{"location":"getting-started/install/#install-iter8","text":"Brew Binaries Source Go 1.17+ Install the latest stable release of the Iter8 CLI using brew as follows. brew tap iter8-tools/iter8 brew install iter8 Install a specific version You can install the latest stable release of the Iter8 CLI with specific major and minor version numbers. For example, the following command installs the latest stable release of the Iter8 CLI with major 0 and minor 8 . brew tap iter8-tools/iter8 brew install iter8@0.8 Pre-compiled Iter8 binaries for many platforms are available here . Uncompress the iter8-X-Y.tar.gz archive for your platform, and move the iter8 binary to any folder in your PATH. Build Iter8 from source as follows. Go 1.17+ is a pre-requisite. # you can replace master with a specific tag such as v0.8.29 export REF = master https://github.com/iter8-tools/iter8.git?ref = $REF cd iter8 make install Install the latest stable release of the Iter8 CLI using go 1.17+ as follows. go install github.com/iter8-tools/iter8@latest You can now run iter8 (from your gopath bin/ directory) Install a specific version You can also install Iter8 CLI with a specific tag. For example, the following command installs version 0.8.29 of the Iter8 CLI. go install github.com/iter8-tools/iter8@v0.8.29","title":"Install Iter8"},{"location":"getting-started/your-first-experiment/","text":"Your First Experiment \u00b6 Load Test an HTTP Service Get started with your first Iter8 experiment by load testing an HTTP service. 1. Install Iter8 \u00b6 Brew Binaries Source Go 1.17+ Install the latest stable release of the Iter8 CLI using brew as follows. brew tap iter8-tools/iter8 brew install iter8 Pre-compiled Iter8 binaries for many platforms are available here . Uncompress the iter8-X-Y.tar.gz archive for your platform, and move the iter8 binary to any folder in your PATH. Build Iter8 from source as follows. Go 1.17+ is a pre-requisite. # you can replace master with a specific tag such as v0.8.29 export REF = master https://github.com/iter8-tools/iter8.git?ref = $REF cd iter8 make install Install the latest stable release of the Iter8 CLI using go 1.17+ as follows. go install github.com/iter8-tools/iter8@latest You can now run iter8 (from your gopath bin/ directory) 2. Download experiment chart \u00b6 Download the load-test-http experiment chart from Iter8 hub as follows. iter8 hub -e load-test-http cd load-test-http 3. Run experiment \u00b6 We will load test the HTTP service whose URL ( url ) is https://httpbin.org/get . The iter8 run command combines an experiment chart with values, generates the experiment.yaml file, runs the experiment, and writes results into the result.yaml file. Run the experiment as follows. iter8 run --set url = https://httpbin.org/get 4. View report \u00b6 View a report of the experiment in HTML or text formats as follows. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html The HTML report looks like this iter8 report The text report looks like this Experiment summary: ******************* Experiment completed: true No task failures: true Total number of tasks: 1 Number of completed tasks: 1 Latest observed values for metrics: *********************************** Metric | value ------- | ----- built-in/http-error-count | 0 .00 built-in/http-error-rate | 0 .00 built-in/http-latency-max ( msec ) | 203 .78 built-in/http-latency-mean ( msec ) | 17 .00 built-in/http-latency-min ( msec ) | 4 .20 built-in/http-latency-p50 ( msec ) | 10 .67 built-in/http-latency-p75 ( msec ) | 12 .33 built-in/http-latency-p90 ( msec ) | 14 .00 built-in/http-latency-p95 ( msec ) | 15 .67 built-in/http-latency-p99 ( msec ) | 202 .84 built-in/http-latency-p99.9 ( msec ) | 203 .69 built-in/http-latency-stddev ( msec ) | 37 .94 built-in/http-request-count | 100 .00 Congratulations! You completed your first Iter8 experiment. Next steps Learn more about load testing HTTP services with service-level objectives (SLOs) . Learn more about load testing gRPC services with service-level objectives (SLOs) .","title":"Your first experiment"},{"location":"getting-started/your-first-experiment/#your-first-experiment","text":"Load Test an HTTP Service Get started with your first Iter8 experiment by load testing an HTTP service.","title":"Your First Experiment"},{"location":"getting-started/your-first-experiment/#1-install-iter8","text":"Brew Binaries Source Go 1.17+ Install the latest stable release of the Iter8 CLI using brew as follows. brew tap iter8-tools/iter8 brew install iter8 Pre-compiled Iter8 binaries for many platforms are available here . Uncompress the iter8-X-Y.tar.gz archive for your platform, and move the iter8 binary to any folder in your PATH. Build Iter8 from source as follows. Go 1.17+ is a pre-requisite. # you can replace master with a specific tag such as v0.8.29 export REF = master https://github.com/iter8-tools/iter8.git?ref = $REF cd iter8 make install Install the latest stable release of the Iter8 CLI using go 1.17+ as follows. go install github.com/iter8-tools/iter8@latest You can now run iter8 (from your gopath bin/ directory)","title":"1. Install Iter8"},{"location":"getting-started/your-first-experiment/#2-download-experiment-chart","text":"Download the load-test-http experiment chart from Iter8 hub as follows. iter8 hub -e load-test-http cd load-test-http","title":"2. Download experiment chart"},{"location":"getting-started/your-first-experiment/#3-run-experiment","text":"We will load test the HTTP service whose URL ( url ) is https://httpbin.org/get . The iter8 run command combines an experiment chart with values, generates the experiment.yaml file, runs the experiment, and writes results into the result.yaml file. Run the experiment as follows. iter8 run --set url = https://httpbin.org/get","title":"3. Run experiment"},{"location":"getting-started/your-first-experiment/#4-view-report","text":"View a report of the experiment in HTML or text formats as follows. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html The HTML report looks like this iter8 report The text report looks like this Experiment summary: ******************* Experiment completed: true No task failures: true Total number of tasks: 1 Number of completed tasks: 1 Latest observed values for metrics: *********************************** Metric | value ------- | ----- built-in/http-error-count | 0 .00 built-in/http-error-rate | 0 .00 built-in/http-latency-max ( msec ) | 203 .78 built-in/http-latency-mean ( msec ) | 17 .00 built-in/http-latency-min ( msec ) | 4 .20 built-in/http-latency-p50 ( msec ) | 10 .67 built-in/http-latency-p75 ( msec ) | 12 .33 built-in/http-latency-p90 ( msec ) | 14 .00 built-in/http-latency-p95 ( msec ) | 15 .67 built-in/http-latency-p99 ( msec ) | 202 .84 built-in/http-latency-p99.9 ( msec ) | 203 .69 built-in/http-latency-stddev ( msec ) | 37 .94 built-in/http-request-count | 100 .00 Congratulations! You completed your first Iter8 experiment. Next steps Learn more about load testing HTTP services with service-level objectives (SLOs) . Learn more about load testing gRPC services with service-level objectives (SLOs) .","title":"4. View report"},{"location":"tutorials/abn/","text":"A/B(/n) Testing \u00b6 A/B(/n) testing compares two or more versions, generally in terms of a business metric (reward), and finds the winning version that performs best in terms of the reward. v0.7 Examples \u00b6 A/B testing with KServe ML models - I . A/B testing with KServe ML models - II . A/B testing with Seldon ML models . A/B testing with Knative services . A/B testing with Istio . A/B testing with Linkerd .","title":"A/B(/n) testing"},{"location":"tutorials/abn/#abn-testing","text":"A/B(/n) testing compares two or more versions, generally in terms of a business metric (reward), and finds the winning version that performs best in terms of the reward.","title":"A/B(/n) Testing"},{"location":"tutorials/abn/#v07-examples","text":"A/B testing with KServe ML models - I . A/B testing with KServe ML models - II . A/B testing with Seldon ML models . A/B testing with Knative services . A/B testing with Istio . A/B testing with Linkerd .","title":"v0.7 Examples"},{"location":"tutorials/chaos/","text":"Chaos Testing with SLOs \u00b6 Chaos testing pushes app or its environment to the break and helps reveal weaknesses in the app configuration. Iter8 experiments can be used to discover if the app can continue to satisfy SLOs even in the midst of chaos. v0.7 Examples \u00b6 Chaos testing with SLOs .","title":"Chaos testing with SLOs"},{"location":"tutorials/chaos/#chaos-testing-with-slos","text":"Chaos testing pushes app or its environment to the break and helps reveal weaknesses in the app configuration. Iter8 experiments can be used to discover if the app can continue to satisfy SLOs even in the midst of chaos.","title":"Chaos Testing with SLOs"},{"location":"tutorials/chaos/#v07-examples","text":"Chaos testing with SLOs .","title":"v0.7 Examples"},{"location":"tutorials/gradual-traffic-shifting/","text":"Gradual Traffic Shifting \u00b6 Gradual traffic shift is a type of canary rollout, where you gradually shift traffic towards the winning version in the experiment over multiple iterations. v0.7 Examples \u00b6 KServe ML models . Seldon ML models . Knative services . Istio .","title":"Gradual traffic shifting"},{"location":"tutorials/gradual-traffic-shifting/#gradual-traffic-shifting","text":"Gradual traffic shift is a type of canary rollout, where you gradually shift traffic towards the winning version in the experiment over multiple iterations.","title":"Gradual Traffic Shifting"},{"location":"tutorials/gradual-traffic-shifting/#v07-examples","text":"KServe ML models . Seldon ML models . Knative services . Istio .","title":"v0.7 Examples"},{"location":"tutorials/mirroring/","text":"Mirroring \u00b6 Traffic mirroring or shadowing enables experimenting with a dark launched version with zero-impact on end-users. Mirrored traffic is a replica of the real user requests that is routed to the dark version. Metrics are collected and evaluated for the dark version, but responses from the dark version are ignored. v0.6 Examples \u00b6 Mirroring with Knative services and Istio .","title":"Mirroring"},{"location":"tutorials/mirroring/#mirroring","text":"Traffic mirroring or shadowing enables experimenting with a dark launched version with zero-impact on end-users. Mirrored traffic is a replica of the real user requests that is routed to the dark version. Metrics are collected and evaluated for the dark version, but responses from the dark version are ignored.","title":"Mirroring"},{"location":"tutorials/mirroring/#v06-examples","text":"Mirroring with Knative services and Istio .","title":"v0.6 Examples"},{"location":"tutorials/session-affinity/","text":"Session affinity \u00b6 Session affinity ensures that the version to which a particular user's request is routed remains consistent throughout the duration of the experiment. v0.7 Examples \u00b6 KServe ML models .","title":"Session affinity"},{"location":"tutorials/session-affinity/#session-affinity","text":"Session affinity ensures that the version to which a particular user's request is routed remains consistent throughout the duration of the experiment.","title":"Session affinity"},{"location":"tutorials/session-affinity/#v07-examples","text":"KServe ML models .","title":"v0.7 Examples"},{"location":"tutorials/slos-with-prometheus/","text":"SLOs with Prometheus \u00b6 Metrics collection using Prometheus is a common feature provided many app frameworks, service meshes, and ingress technologies. Iter8 can query metrics from Prometheus and perform SLO validation based on metric values. v0.7 Examples \u00b6 KServe ML models Seldon ML models Istio Linkerd","title":"SLOs with Prometheus"},{"location":"tutorials/slos-with-prometheus/#slos-with-prometheus","text":"Metrics collection using Prometheus is a common feature provided many app frameworks, service meshes, and ingress technologies. Iter8 can query metrics from Prometheus and perform SLO validation based on metric values.","title":"SLOs with Prometheus"},{"location":"tutorials/slos-with-prometheus/#v07-examples","text":"KServe ML models Seldon ML models Istio Linkerd","title":"v0.7 Examples"},{"location":"tutorials/traffic-percent/","text":"Percentage-based Traffic Split \u00b6 Perform an experiment while splitting the traffic between the stable and canary versions of an app. The traffic splitting is percentage-based. v0.7 Examples \u00b6 KServe ML models . Knative services . Istio .","title":"Percentage traffic-split"},{"location":"tutorials/traffic-percent/#percentage-based-traffic-split","text":"Perform an experiment while splitting the traffic between the stable and canary versions of an app. The traffic splitting is percentage-based.","title":"Percentage-based Traffic Split"},{"location":"tutorials/traffic-percent/#v07-examples","text":"KServe ML models . Knative services . Istio .","title":"v0.7 Examples"},{"location":"tutorials/load-test-grpc/appserverlessml/","text":"K8s App/serverless/ML Frameworks \u00b6 This tutorial provides examples of using the load-test-grpc experiment chart with various Kubernetes app/serverless/ML frameworks. Refer to load-test-grpc usage to learn more about this chart. Dear Iter8 community These examples are maintained by members of the Iter8 community, and may become outdated. If you find that something is not working, lend a helping hand and fix it in a PR. More examples are always welcome. Knative \u00b6 Before you begin Install Iter8 . Install Knative and deploy your first Knative Service . As noted at the end of the Knative tutorial, when you curl the Knative service, curl http://hello.default.127.0.0.1.sslip.io you should see the expected output as follows. Hello World! Update the Knative service deployed above to a gRPC service as follows. kn service update hello \\ --image docker.io/grpc/java-example-hostname:latest \\ --port 50051 \\ --revision-name = grpc Download experiment chart. iter8 hub -e load-test-grpc cd load-test-grpc 1. Run experiment \u00b6 We will load test and validate SLOs for the Knative gRPC service using by running an Iter8 experiment. The iter8 run command combines an experiment chart with values, generates the experiment.yaml file, runs the experiment, and writes results into the result.yaml file. Run the experiment as follows. iter8 run --set-string host = \"hello.default.127.0.0.1.sslip.io:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-java/master/examples/example-hostname/src/main/proto/helloworld/helloworld.proto\" --set data.name = \"frodo\" \\ --set SLOs.error-rate = 0 \\ --set SLOs.latency/mean = 400 \\ --set SLOs.latency/p90 = 500 \\ --set SLOs.latency/p '97\\.5' = 600 In the above experiment, the following SLOs are validated for the Knative service. - error rate is 0 - mean latency is under 400 msec - 90 th percentile latency is under 500 msec - 97.5 th percentile latency is under 600 msec 2. Assert outcomes \u00b6 Assert that the experiment completed without any failures and SLOs are satisfied. iter8 assert -c completed -c nofailure -c slos 3. View report \u00b6 View a report of the experiment in HTML or text formats as follows. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html iter8 report -o text","title":"K8s app/serverless/ML"},{"location":"tutorials/load-test-grpc/appserverlessml/#k8s-appserverlessml-frameworks","text":"This tutorial provides examples of using the load-test-grpc experiment chart with various Kubernetes app/serverless/ML frameworks. Refer to load-test-grpc usage to learn more about this chart. Dear Iter8 community These examples are maintained by members of the Iter8 community, and may become outdated. If you find that something is not working, lend a helping hand and fix it in a PR. More examples are always welcome.","title":"K8s App/serverless/ML Frameworks"},{"location":"tutorials/load-test-grpc/appserverlessml/#knative","text":"Before you begin Install Iter8 . Install Knative and deploy your first Knative Service . As noted at the end of the Knative tutorial, when you curl the Knative service, curl http://hello.default.127.0.0.1.sslip.io you should see the expected output as follows. Hello World! Update the Knative service deployed above to a gRPC service as follows. kn service update hello \\ --image docker.io/grpc/java-example-hostname:latest \\ --port 50051 \\ --revision-name = grpc Download experiment chart. iter8 hub -e load-test-grpc cd load-test-grpc","title":"Knative"},{"location":"tutorials/load-test-grpc/appserverlessml/#1-run-experiment","text":"We will load test and validate SLOs for the Knative gRPC service using by running an Iter8 experiment. The iter8 run command combines an experiment chart with values, generates the experiment.yaml file, runs the experiment, and writes results into the result.yaml file. Run the experiment as follows. iter8 run --set-string host = \"hello.default.127.0.0.1.sslip.io:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-java/master/examples/example-hostname/src/main/proto/helloworld/helloworld.proto\" --set data.name = \"frodo\" \\ --set SLOs.error-rate = 0 \\ --set SLOs.latency/mean = 400 \\ --set SLOs.latency/p90 = 500 \\ --set SLOs.latency/p '97\\.5' = 600 In the above experiment, the following SLOs are validated for the Knative service. - error rate is 0 - mean latency is under 400 msec - 90 th percentile latency is under 500 msec - 97.5 th percentile latency is under 600 msec","title":"1. Run experiment"},{"location":"tutorials/load-test-grpc/appserverlessml/#2-assert-outcomes","text":"Assert that the experiment completed without any failures and SLOs are satisfied. iter8 assert -c completed -c nofailure -c slos","title":"2. Assert outcomes"},{"location":"tutorials/load-test-grpc/appserverlessml/#3-view-report","text":"View a report of the experiment in HTML or text formats as follows. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html iter8 report -o text","title":"3. View report"},{"location":"tutorials/load-test-grpc/defaultvalues/","text":"Default Values for load-test-grpc \u00b6 ### Defaults values for this experiment chart. ### The documentation follows Helm recommendations described in the URL below. ### https://helm.sh/docs/chart_best_practices/values/#document-valuesyaml ################################## ### host Host and port of the gRPC service ### This field is required. host : null ### call Fully-qualified method name. ### Specified in 'package.Service/method' or 'package.Service.Method' format. ### This field is required. call : null ### protoURL URL where the Protocol Buffer file that defines the gRPC service is located. protoURL : null ### connectTimeout Connection timeout duration for the initial connection dial. connectTimeout : 10s ### total Number of requests to run. total : 200 ### maxDuration Maximum duration for the experiment to send requests ### with 'total' setting respected. ### If duration is reached before 'total' requests are completed, ### experiment stops sending requests. Examples: 10s, 3m. maxDuration : null ### duration Duration for the experiment to send requests. ### When duration is reached, experiment stops sending requests. ### If duration is specified, 'total' is ignored. Examples: 10s, 3m. duration : null ### rps Rate limit in how many requsts per second (RPS) we perform in total. ### Default is no rate limit. The total RPS will be distributed among all the workers ### as specified by concurrency options. rps : null ### concurrency Number of workers to run concurrently. concurrency : 50 ### connections Number of connections to use. ### Concurrency is distributed evenly among all the connections. connections : 1 ### data Call data in the map[string]interface{} format. ### When data is specified, it takes precedence over dataURL and binaryDataURL. data : null ### dataURL URL pointing to a JSON file whose contents are to be used as call data. ### This takes precedence over binaryDataURL. dataURL : null ### binaryDataURL URL pointing to a binary file containing serialized binary message ### or multiple count-prefixed messages, to be used as call data. binaryDataURL : null ### metadata Call metadata in the map[string]string format. ### When metadata is specified, it takes precedence over metadataURL. metadata : null ### metadataURL URL pointing to a JSON file whose contents are to be used as call metadata. metadataURL : null ### SLOs A map of service level objectives (SLOs) that the app needs to satisfy. ### Metrics collected during the load test are used to verify if the app satisfies SLOs. ### Each SLO has a key which is the metric name, ### and a value which is the upper limit on the metric. ### Valid metric names are error-rate, error-count, latency/max, latency/mean, ### latency/stddev, and latency/pX, where X is any latency percentile ### (i.e., any float value between 0 and 100). SLOs : null","title":"Default values"},{"location":"tutorials/load-test-grpc/defaultvalues/#default-values-for-load-test-grpc","text":"### Defaults values for this experiment chart. ### The documentation follows Helm recommendations described in the URL below. ### https://helm.sh/docs/chart_best_practices/values/#document-valuesyaml ################################## ### host Host and port of the gRPC service ### This field is required. host : null ### call Fully-qualified method name. ### Specified in 'package.Service/method' or 'package.Service.Method' format. ### This field is required. call : null ### protoURL URL where the Protocol Buffer file that defines the gRPC service is located. protoURL : null ### connectTimeout Connection timeout duration for the initial connection dial. connectTimeout : 10s ### total Number of requests to run. total : 200 ### maxDuration Maximum duration for the experiment to send requests ### with 'total' setting respected. ### If duration is reached before 'total' requests are completed, ### experiment stops sending requests. Examples: 10s, 3m. maxDuration : null ### duration Duration for the experiment to send requests. ### When duration is reached, experiment stops sending requests. ### If duration is specified, 'total' is ignored. Examples: 10s, 3m. duration : null ### rps Rate limit in how many requsts per second (RPS) we perform in total. ### Default is no rate limit. The total RPS will be distributed among all the workers ### as specified by concurrency options. rps : null ### concurrency Number of workers to run concurrently. concurrency : 50 ### connections Number of connections to use. ### Concurrency is distributed evenly among all the connections. connections : 1 ### data Call data in the map[string]interface{} format. ### When data is specified, it takes precedence over dataURL and binaryDataURL. data : null ### dataURL URL pointing to a JSON file whose contents are to be used as call data. ### This takes precedence over binaryDataURL. dataURL : null ### binaryDataURL URL pointing to a binary file containing serialized binary message ### or multiple count-prefixed messages, to be used as call data. binaryDataURL : null ### metadata Call metadata in the map[string]string format. ### When metadata is specified, it takes precedence over metadataURL. metadata : null ### metadataURL URL pointing to a JSON file whose contents are to be used as call metadata. metadataURL : null ### SLOs A map of service level objectives (SLOs) that the app needs to satisfy. ### Metrics collected during the load test are used to verify if the app satisfies SLOs. ### Each SLO has a key which is the metric name, ### and a value which is the upper limit on the metric. ### Valid metric names are error-rate, error-count, latency/max, latency/mean, ### latency/stddev, and latency/pX, where X is any latency percentile ### (i.e., any float value between 0 and 100). SLOs : null","title":"Default Values for load-test-grpc"},{"location":"tutorials/load-test-grpc/usage/","text":"Load Test gRPC Services with SLOs \u00b6 Overview Iter8's load-test-grpc experiment chart can be used to generate call requests for gRPC services, collect built-in latency and error-related metrics, and validate service-level objectives (SLOs). Use-cases: Rapid testing, validation, safe rollouts, and continuous delivery (CD) of gRPC services are the motivating use-cases for this experiment type. If the gRPC service satisfies the SLOs, it may be safely rolled out, for example, from a test environment to a production environment. Your first experiment provides a basic example of using the load-test-http experiment chart. This tutorial provides additional examples. Before you try these examples Install Iter8 . Choose a language, and follow the linked instructions to run the gRPC sample app. Update step is not needed The linked instructions show how to update the app, and re-run the updated app. For the purpose of this tutorial, there is no need to update and re-run. Running the basic service is sufficient. C# C++ Dart Go Java Kotlin Node Objective-C PHP Python Ruby Run the C# gRPC app . Run the C++ gRPC app . Run the Dart gRPC app . Run the Go gRPC app . Run the Java gRPC app . Run the Kotlin gRPC app . Run the Node gRPC app . Run the Objective-C gRPC app . Run the PHP gRPC app . Run the Python gRPC app . Run the Ruby gRPC app . Download experiment chart. iter8 hub -e load-test-grpc cd load-test-grpc Basic example \u00b6 Load test the gRPC sample service with host value 127.0.0.1:50051 , fully-qualified method name ( call ) helloworld.Greeter.SayHello , and defined by the Protocol Buffer file located at the protoURL . iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" View a report of this experiment as described in the quick start tutorial . Load profile \u00b6 Control the characteristics of the load generated by the load-test-grpc experiment by setting the number of requests ( total )/duration ( duration ), the number of requests per second ( rps ), number of connections to use ( connections ), and the number of concurrent request workers to use in each connection ( concurrency ). Number of requests Duration iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set data.name = \"frodo\" \\ --set total = 500 \\ --set rps = 25 \\ --set concurrency = 50 \\ --set connections = 10 The duration value may be any Go duration string . iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set data.name = \"frodo\" \\ --set duration = \"20s\" \\ --set rps = 25 \\ --set concurrency = 50 \\ --set connections = 10 When you set total and qps , the duration of the load test is automatically determined. Similarly, when you set duration and qps , the number of requests is automatically determined. If you set both total and duration , the former will be ignored. Call data \u00b6 gRPC calls may include data serialized as Protocol Buffer messages . Supply them as values, or by pointing to JSON or binary files containing the data. Data Data URL Binary data URL The protobuf file specifying the gRPC service used in this tutorial defines the following HelloRequest message format: message HelloRequest { string name = 1 ; } Suppose you want include the following HelloRequest message with every call. name : frodo To do so, run the Iter8 experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set data.name = \"frodo\" Nested data Call data may be nested. For example, consider the data: name : frodo realm : planet : earth location : middle You can set the above data in iter8 run as follows: --set data.name = \"frodo\" \\ --set data.realm.planet = \"earth\" \\ --set data.realm.location = \"middle\" Suppose the call data you want to send is contained in a JSON file and hosted at the url https://location.of/data.json . Iter8 can fetch this JSON file and use the data contained in it during the gRPC load test. To do so, run the experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set dataURL = \"https://location.of/data.json\" Suppose that call data you want to send is contained in a binary file as a serialized binary message or multiple count-prefixed messages, and hosted at the url https://location.of/data.bin . Iter8 can fetch this binary file and use the data contained in it during the gRPC load test. To do so, run the experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set binaryDataURL = \"https://location.of/data.bin\" data vs dataURL vs binaryDataURL \u00b6 If the call data is shallow and has only a few fields, setting the data value directly is the easiest of the three approaches. If it is deeply nested, or contains many fields, storing the data as a JSON or binary file, and providing the dataURL or binaryDataURL value might be the easier approach. When more than one of these options are specified, the data field takes precedence over the dataURL field which in turn takes precedence over the binaryDataURL field. Call metadata \u00b6 gRPC calls may include metadata which is information about a particular call. Supply them as values, or by pointing to a JSON file containing the metadata. Metadata Metadata URL You can supply metadata of type map[string]string (i.e., a map whose keys and values are strings) in the gRPC load test. Suppose you want to use the following metadata. darth : vader lord : sauron volde : mort To do so, run the Iter8 experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set metadata.darth = \"vader\" \\ --set metadata.lord = \"sauron\" \\ --set metadata.volde = \"mort\" Suppose the call metadata you want to send is contained in a JSON file and hosted at the url https://location.of/metadata.json . Iter8 can fetch this JSON file and use its contents as the metadata during the gRPC load test. To do so, run the experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set metadataURL = \"https://location.of/metadata.json\" metadata vs metadataURL \u00b6 If the call metadata is shallow and has only a few fields, setting the metadata value directly is the easier approach. If it is deeply nested, or contains many fields, storing the data as a JSON binary file, and providing the metadataURL value might be the easier approach. When both these options are specified, the metadata field takes precedence over the metadataURL field.","title":"Usage examples"},{"location":"tutorials/load-test-grpc/usage/#load-test-grpc-services-with-slos","text":"Overview Iter8's load-test-grpc experiment chart can be used to generate call requests for gRPC services, collect built-in latency and error-related metrics, and validate service-level objectives (SLOs). Use-cases: Rapid testing, validation, safe rollouts, and continuous delivery (CD) of gRPC services are the motivating use-cases for this experiment type. If the gRPC service satisfies the SLOs, it may be safely rolled out, for example, from a test environment to a production environment. Your first experiment provides a basic example of using the load-test-http experiment chart. This tutorial provides additional examples. Before you try these examples Install Iter8 . Choose a language, and follow the linked instructions to run the gRPC sample app. Update step is not needed The linked instructions show how to update the app, and re-run the updated app. For the purpose of this tutorial, there is no need to update and re-run. Running the basic service is sufficient. C# C++ Dart Go Java Kotlin Node Objective-C PHP Python Ruby Run the C# gRPC app . Run the C++ gRPC app . Run the Dart gRPC app . Run the Go gRPC app . Run the Java gRPC app . Run the Kotlin gRPC app . Run the Node gRPC app . Run the Objective-C gRPC app . Run the PHP gRPC app . Run the Python gRPC app . Run the Ruby gRPC app . Download experiment chart. iter8 hub -e load-test-grpc cd load-test-grpc","title":"Load Test gRPC Services with SLOs"},{"location":"tutorials/load-test-grpc/usage/#basic-example","text":"Load test the gRPC sample service with host value 127.0.0.1:50051 , fully-qualified method name ( call ) helloworld.Greeter.SayHello , and defined by the Protocol Buffer file located at the protoURL . iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" View a report of this experiment as described in the quick start tutorial .","title":"Basic example"},{"location":"tutorials/load-test-grpc/usage/#load-profile","text":"Control the characteristics of the load generated by the load-test-grpc experiment by setting the number of requests ( total )/duration ( duration ), the number of requests per second ( rps ), number of connections to use ( connections ), and the number of concurrent request workers to use in each connection ( concurrency ). Number of requests Duration iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set data.name = \"frodo\" \\ --set total = 500 \\ --set rps = 25 \\ --set concurrency = 50 \\ --set connections = 10 The duration value may be any Go duration string . iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set data.name = \"frodo\" \\ --set duration = \"20s\" \\ --set rps = 25 \\ --set concurrency = 50 \\ --set connections = 10 When you set total and qps , the duration of the load test is automatically determined. Similarly, when you set duration and qps , the number of requests is automatically determined. If you set both total and duration , the former will be ignored.","title":"Load profile"},{"location":"tutorials/load-test-grpc/usage/#call-data","text":"gRPC calls may include data serialized as Protocol Buffer messages . Supply them as values, or by pointing to JSON or binary files containing the data. Data Data URL Binary data URL The protobuf file specifying the gRPC service used in this tutorial defines the following HelloRequest message format: message HelloRequest { string name = 1 ; } Suppose you want include the following HelloRequest message with every call. name : frodo To do so, run the Iter8 experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set data.name = \"frodo\" Nested data Call data may be nested. For example, consider the data: name : frodo realm : planet : earth location : middle You can set the above data in iter8 run as follows: --set data.name = \"frodo\" \\ --set data.realm.planet = \"earth\" \\ --set data.realm.location = \"middle\" Suppose the call data you want to send is contained in a JSON file and hosted at the url https://location.of/data.json . Iter8 can fetch this JSON file and use the data contained in it during the gRPC load test. To do so, run the experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set dataURL = \"https://location.of/data.json\" Suppose that call data you want to send is contained in a binary file as a serialized binary message or multiple count-prefixed messages, and hosted at the url https://location.of/data.bin . Iter8 can fetch this binary file and use the data contained in it during the gRPC load test. To do so, run the experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set binaryDataURL = \"https://location.of/data.bin\"","title":"Call data"},{"location":"tutorials/load-test-grpc/usage/#data-vs-dataurl-vs-binarydataurl","text":"If the call data is shallow and has only a few fields, setting the data value directly is the easiest of the three approaches. If it is deeply nested, or contains many fields, storing the data as a JSON or binary file, and providing the dataURL or binaryDataURL value might be the easier approach. When more than one of these options are specified, the data field takes precedence over the dataURL field which in turn takes precedence over the binaryDataURL field.","title":"data vs dataURL vs binaryDataURL"},{"location":"tutorials/load-test-grpc/usage/#call-metadata","text":"gRPC calls may include metadata which is information about a particular call. Supply them as values, or by pointing to a JSON file containing the metadata. Metadata Metadata URL You can supply metadata of type map[string]string (i.e., a map whose keys and values are strings) in the gRPC load test. Suppose you want to use the following metadata. darth : vader lord : sauron volde : mort To do so, run the Iter8 experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set metadata.darth = \"vader\" \\ --set metadata.lord = \"sauron\" \\ --set metadata.volde = \"mort\" Suppose the call metadata you want to send is contained in a JSON file and hosted at the url https://location.of/metadata.json . Iter8 can fetch this JSON file and use its contents as the metadata during the gRPC load test. To do so, run the experiment as follows. iter8 run --set-string host = \"127.0.0.1:50051\" \\ --set-string call = \"helloworld.Greeter.SayHello\" \\ --set-string protoURL = \"https://raw.githubusercontent.com/grpc/grpc-go/master/examples/helloworld/helloworld/helloworld.proto\" \\ --set metadataURL = \"https://location.of/metadata.json\"","title":"Call metadata"},{"location":"tutorials/load-test-grpc/usage/#metadata-vs-metadataurl","text":"If the call metadata is shallow and has only a few fields, setting the metadata value directly is the easier approach. If it is deeply nested, or contains many fields, storing the data as a JSON binary file, and providing the metadataURL value might be the easier approach. When both these options are specified, the metadata field takes precedence over the metadataURL field.","title":"metadata vs metadataURL"},{"location":"tutorials/load-test-http/appserverlessml/","text":"K8s App/serverless/ML Frameworks \u00b6 This tutorial provides examples of using the load-test-http experiment chart with various Kubernetes app/serverless/ML frameworks. Refer to load-test-http usage to learn more about this chart. Dear Iter8 community These examples are maintained by members of the Iter8 community, and may become outdated. If you find that something is not working, lend a helping hand and fix it in a PR. More examples are always welcome. Knative \u00b6 Before you begin Install Iter8 . Install Knative and deploy your first Knative Service . As noted at the end of the Knative tutorial, when you curl the Knative service, curl http://hello.default.127.0.0.1.sslip.io you should see the expected output as follows. Hello World! Download experiment chart. iter8 hub -e load-test-http cd load-test-http 1. Run experiment \u00b6 We will load test and validate SLOs for the Knative HTTP service using by running an Iter8 experiment. The iter8 run command combines an experiment chart with values, generates the experiment.yaml file, runs the experiment, and writes results into the result.yaml file. Run the experiment as follows. iter8 run --set url = http://hello.default.127.0.0.1.sslip.io \\ --set SLOs.error-rate = 0 \\ --set SLOs.latency-mean = 50 \\ --set SLOs.latency-p90 = 100 \\ --set SLOs.latency-p '97\\.5' = 200 In the above experiment, the following SLOs are validated for the Knative service. - error rate is 0 - mean latency is under 50 msec - 90 th percentile latency is under 100 msec - 97.5 th percentile latency is under 200 msec 2. Assert outcomes \u00b6 Assert that the experiment completed without any failures and SLOs are satisfied. iter8 assert -c completed -c nofailure -c slos 3. View report \u00b6 View a report of the experiment in HTML or text formats as follows. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html iter8 report -o text","title":"K8s app/serverless/ML"},{"location":"tutorials/load-test-http/appserverlessml/#k8s-appserverlessml-frameworks","text":"This tutorial provides examples of using the load-test-http experiment chart with various Kubernetes app/serverless/ML frameworks. Refer to load-test-http usage to learn more about this chart. Dear Iter8 community These examples are maintained by members of the Iter8 community, and may become outdated. If you find that something is not working, lend a helping hand and fix it in a PR. More examples are always welcome.","title":"K8s App/serverless/ML Frameworks"},{"location":"tutorials/load-test-http/appserverlessml/#knative","text":"Before you begin Install Iter8 . Install Knative and deploy your first Knative Service . As noted at the end of the Knative tutorial, when you curl the Knative service, curl http://hello.default.127.0.0.1.sslip.io you should see the expected output as follows. Hello World! Download experiment chart. iter8 hub -e load-test-http cd load-test-http","title":"Knative"},{"location":"tutorials/load-test-http/appserverlessml/#1-run-experiment","text":"We will load test and validate SLOs for the Knative HTTP service using by running an Iter8 experiment. The iter8 run command combines an experiment chart with values, generates the experiment.yaml file, runs the experiment, and writes results into the result.yaml file. Run the experiment as follows. iter8 run --set url = http://hello.default.127.0.0.1.sslip.io \\ --set SLOs.error-rate = 0 \\ --set SLOs.latency-mean = 50 \\ --set SLOs.latency-p90 = 100 \\ --set SLOs.latency-p '97\\.5' = 200 In the above experiment, the following SLOs are validated for the Knative service. - error rate is 0 - mean latency is under 50 msec - 90 th percentile latency is under 100 msec - 97.5 th percentile latency is under 200 msec","title":"1. Run experiment"},{"location":"tutorials/load-test-http/appserverlessml/#2-assert-outcomes","text":"Assert that the experiment completed without any failures and SLOs are satisfied. iter8 assert -c completed -c nofailure -c slos","title":"2. Assert outcomes"},{"location":"tutorials/load-test-http/appserverlessml/#3-view-report","text":"View a report of the experiment in HTML or text formats as follows. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html iter8 report -o text","title":"3. View report"},{"location":"tutorials/load-test-http/defaultvalues/","text":"Default Values for load-test-http \u00b6 ### Defaults values for the load-test-http experiment chart. ### The documentation follows Helm recommendations described in the URL below. ### https://helm.sh/docs/chart_best_practices/values/#document-valuesyaml ################################## ### url HTTP(S) URL where the app receives GET or POST requests. ### This field is required. url : null ### headers HTTP headers to be used in requests sent to the app. ### Specified as a map with key being header names, and values being header values. headers : null ### numQueries Number of requests sent to the app. numQueries : null ### duration Duration for which requests are sent to the app. ### Value can be any Go duration string (https://pkg.go.dev/maze.io/x/duration#ParseDuration) ### This field is ignored if `numQueries` is specified. duration : null ### qps Number of requests per second sent to each version. qps : 8.0 ### connections Number of parallel connections used to send requests. connections : 4 ### payloadStr String data to be sent as payload. ### If this field is specified, Iter8 will send HTTP POST requests. ### with this string as the payload. ### This field is ignored if `payloadURL` is specified. payloadStr : null ### payloadUrl URL of payload. If this field is specified, ### Iter8 will send HTTP POST requests to versions with ### data downloaded from this URL as the payload. payloadURL : null ### contentType The type of the payload. Indicated using the Content-Type HTTP header value. ### This is intended to be used in conjunction with one of the `payload*` fields above. ### If this field is specified, Iter8 will send HTTP POST requests to versions ### with this content type header value. If payload is supplied, and this field is omitted, ### it will be defaulted to \"application/octet-stream\". contentType : null ### errorsAbove Any HTTP response code above this value is considered an error. ### Default value is 400. errorsAbove : 400 ### SLOs A map of service level objectives (SLOs) that the app needs to satisfy. ### Metrics collected during the load test are used to verify if the app satisfies SLOs. ### Each SLO has a key which is the metric name, ### and a value which is the upper limit on the metric. ### Valid metric names are error-rate, error-count, latency-max, ### latency-mean, latency-stddev, and latency-pX, where X is any latency percentile ### (i.e., any float value between 0 and 100). SLOs : null","title":"Default values"},{"location":"tutorials/load-test-http/defaultvalues/#default-values-for-load-test-http","text":"### Defaults values for the load-test-http experiment chart. ### The documentation follows Helm recommendations described in the URL below. ### https://helm.sh/docs/chart_best_practices/values/#document-valuesyaml ################################## ### url HTTP(S) URL where the app receives GET or POST requests. ### This field is required. url : null ### headers HTTP headers to be used in requests sent to the app. ### Specified as a map with key being header names, and values being header values. headers : null ### numQueries Number of requests sent to the app. numQueries : null ### duration Duration for which requests are sent to the app. ### Value can be any Go duration string (https://pkg.go.dev/maze.io/x/duration#ParseDuration) ### This field is ignored if `numQueries` is specified. duration : null ### qps Number of requests per second sent to each version. qps : 8.0 ### connections Number of parallel connections used to send requests. connections : 4 ### payloadStr String data to be sent as payload. ### If this field is specified, Iter8 will send HTTP POST requests. ### with this string as the payload. ### This field is ignored if `payloadURL` is specified. payloadStr : null ### payloadUrl URL of payload. If this field is specified, ### Iter8 will send HTTP POST requests to versions with ### data downloaded from this URL as the payload. payloadURL : null ### contentType The type of the payload. Indicated using the Content-Type HTTP header value. ### This is intended to be used in conjunction with one of the `payload*` fields above. ### If this field is specified, Iter8 will send HTTP POST requests to versions ### with this content type header value. If payload is supplied, and this field is omitted, ### it will be defaulted to \"application/octet-stream\". contentType : null ### errorsAbove Any HTTP response code above this value is considered an error. ### Default value is 400. errorsAbove : 400 ### SLOs A map of service level objectives (SLOs) that the app needs to satisfy. ### Metrics collected during the load test are used to verify if the app satisfies SLOs. ### Each SLO has a key which is the metric name, ### and a value which is the upper limit on the metric. ### Valid metric names are error-rate, error-count, latency-max, ### latency-mean, latency-stddev, and latency-pX, where X is any latency percentile ### (i.e., any float value between 0 and 100). SLOs : null","title":"Default Values for load-test-http"},{"location":"tutorials/load-test-http/usage/","text":"Load Test HTTP Services with SLOs \u00b6 Overview Iter8's load-test-http experiment chart can be used to generate requests for HTTP services, collect built-in latency and error-related metrics, and validate service-level objectives (SLOs). Use-cases: Rapid testing, validation, safe rollouts, and continuous delivery (CD) of HTTP services are the motivating use-cases for this experiment type. If the HTTP service satisfies the SLOs, it may be safely rolled out, for example, from a test environment to a production environment. Your first experiment provides a basic example of using the load-test-http experiment chart. This tutorial provides additional examples. Before you try these examples Install Iter8 . Run the httpbin sample app from a separate terminal. We will load test this app in the examples. docker run -p 80 :80 kennethreitz/httpbin You can also use Podman or other alternatives to Docker in the above command. Download experiment chart. iter8 hub -e load-test-http cd load-test-http Load profile \u00b6 Control the characteristics of the load generated by the load-test-http experiment by setting the number of queries ( numQueries ), duration ( duration ), the number of queries sent per second ( qps ), and the number of parallel connections used to send queries ( connections ). Number of queries Duration iter8 run --set url = http://127.0.0.1/get \\ --set numQueries = 200 \\ --set qps = 10 \\ --set connections = 5 The duration value may be any Go duration string . iter8 run --set url = http://127.0.0.1/get \\ --set duration = 20s \\ --set qps = 10 \\ --set connections = 5 When you set numQueries and qps , the duration of the load test is automatically determined. Similarly, when you set the duration and qps , the number of queries to be sent is automatically determined. If you set both numQueries and duration , the latter will be ignored. Payload \u00b6 Send any type of content as payload during the load test of HTTP POST endpoints, either by specifying the payload as a string ( payloadStr ), or by specifying a URL for Iter8 to fetch the payload from ( payloadURL ). You can also specify the HTTP Content Type header ( contentType ). string string with contentType JSON from URL image from URL When payloadStr is set, content type is set to application/octet-stream by default. iter8 run --set url = http://127.0.0.1/post \\ --set payloadStr = \"abc123\" Set content type to text/plain . iter8 run --set url = http://127.0.0.1/post \\ --set payloadStr = \"abc123\" \\ --set contentType = \"text/plain\" Fetch JSON content from a URL. Use this JSON as payload. Set content type to application/json . iter8 run --set url = http://127.0.0.1/post \\ --set payloadURL = https://data.police.uk/api/crimes-street-dates \\ --set contentType = \"application/json\" Fetch jpeg image from a URL. Use this image as payload. Set content type to image/jpeg . iter8 run --set url = http://127.0.0.1/post \\ --set payloadURL = https://cdn.pixabay.com/photo/2021/09/08/17/58/poppy-6607526_1280.jpg \\ --set contentType = \"image/jpeg\" Metrics and SLOs \u00b6 By default, the following metrics are collected by load-test-http : request-count : total number of requests sent error-count : number of error responses error-rate : fraction of error responses latency-mean : mean of observed latency values latency-stddev : standard deviation of observed latency values latency-min : min of observed latency values latency-max : max of observed latency values latency-pX : X th percentile of observed latency values, for X in [50.0, 75.0, 90.0, 95.0, 99.0, 99.9] In addition, any other latency percentiles that are specified as part of SLOs are also collected. Example \u00b6 iter8 run --set url = http://127.0.0.1/get \\ --set SLOs.error-rate = 0 \\ --set SLOs.latency-mean = 50 \\ --set SLOs.latency-p90 = 100 \\ --set SLOs.latency-p '97\\.5' = 200 In the above experiment, the following latency percentiles are collected and reported. [25.0, 50.0, 75.0, 90.0, 95.0, 97.5, 99.0, 99.9] The following SLOs are validated. error rate is 0 mean latency is under 50 msec 90 th percentile latency is under 100 msec 97.5 th percentile latency is under 200 msec The Iter8 experiment report contains metric values, and SLO validation results. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html The HTML report looks like this iter8 report The text report looks like this Experiment summary: ******************* Experiment completed: true No task failures: true Total number of tasks: 2 Number of completed tasks: 2 Whether or not service level objectives ( SLOs ) are satisfied: ************************************************************* SLO Conditions | Satisfied -------------- | --------- built-in/http-error-rate < = 0 | true built-in/http-latency-mean ( msec ) < = 50 | true built-in/http-latency-p90 ( msec ) < = 100 | true built-in/http-latency-p97.5 ( msec ) < = 200 | true Latest observed values for metrics: *********************************** Metric | value ------- | ----- built-in/http-error-count | 0 .00 built-in/http-error-rate | 0 .00 built-in/http-latency-max ( msec ) | 10 .95 built-in/http-latency-mean ( msec ) | 5 .72 built-in/http-latency-min ( msec ) | 2 .63 built-in/http-latency-p50 ( msec ) | 5 .75 built-in/http-latency-p75 ( msec ) | 6 .95 built-in/http-latency-p90 ( msec ) | 7 .88 built-in/http-latency-p95 ( msec ) | 8 .50 built-in/http-latency-p97.5 ( msec ) | 8 .92 built-in/http-latency-p99 ( msec ) | 10 .00 built-in/http-latency-p99.9 ( msec ) | 10 .85 built-in/http-latency-stddev ( msec ) | 1 .70 built-in/http-request-count | 100 .00 Assertions \u00b6 The iter8 assert subcommand asserts if experiment result satisfies the specified conditions. If assert conditions are satisfied, it exits with code 0 ; else, it exits with code 1 . Assertions are especially useful within CI/CD/GitOps pipelines. Assert that the sample experiment completed without failures, and all SLOs are satisfied. iter8 assert -c completed -c nofailure -c slos Sample output from Iter8 assert INFO [ 2021 -11-10 09 :33:12 ] experiment completed INFO [ 2021 -11-10 09 :33:12 ] experiment has no failure INFO [ 2021 -11-10 09 :33:12 ] SLOs are satisfied INFO [ 2021 -11-10 09 :33:12 ] all conditions were satisfied","title":"Usage examples"},{"location":"tutorials/load-test-http/usage/#load-test-http-services-with-slos","text":"Overview Iter8's load-test-http experiment chart can be used to generate requests for HTTP services, collect built-in latency and error-related metrics, and validate service-level objectives (SLOs). Use-cases: Rapid testing, validation, safe rollouts, and continuous delivery (CD) of HTTP services are the motivating use-cases for this experiment type. If the HTTP service satisfies the SLOs, it may be safely rolled out, for example, from a test environment to a production environment. Your first experiment provides a basic example of using the load-test-http experiment chart. This tutorial provides additional examples. Before you try these examples Install Iter8 . Run the httpbin sample app from a separate terminal. We will load test this app in the examples. docker run -p 80 :80 kennethreitz/httpbin You can also use Podman or other alternatives to Docker in the above command. Download experiment chart. iter8 hub -e load-test-http cd load-test-http","title":"Load Test HTTP Services with SLOs"},{"location":"tutorials/load-test-http/usage/#load-profile","text":"Control the characteristics of the load generated by the load-test-http experiment by setting the number of queries ( numQueries ), duration ( duration ), the number of queries sent per second ( qps ), and the number of parallel connections used to send queries ( connections ). Number of queries Duration iter8 run --set url = http://127.0.0.1/get \\ --set numQueries = 200 \\ --set qps = 10 \\ --set connections = 5 The duration value may be any Go duration string . iter8 run --set url = http://127.0.0.1/get \\ --set duration = 20s \\ --set qps = 10 \\ --set connections = 5 When you set numQueries and qps , the duration of the load test is automatically determined. Similarly, when you set the duration and qps , the number of queries to be sent is automatically determined. If you set both numQueries and duration , the latter will be ignored.","title":"Load profile"},{"location":"tutorials/load-test-http/usage/#payload","text":"Send any type of content as payload during the load test of HTTP POST endpoints, either by specifying the payload as a string ( payloadStr ), or by specifying a URL for Iter8 to fetch the payload from ( payloadURL ). You can also specify the HTTP Content Type header ( contentType ). string string with contentType JSON from URL image from URL When payloadStr is set, content type is set to application/octet-stream by default. iter8 run --set url = http://127.0.0.1/post \\ --set payloadStr = \"abc123\" Set content type to text/plain . iter8 run --set url = http://127.0.0.1/post \\ --set payloadStr = \"abc123\" \\ --set contentType = \"text/plain\" Fetch JSON content from a URL. Use this JSON as payload. Set content type to application/json . iter8 run --set url = http://127.0.0.1/post \\ --set payloadURL = https://data.police.uk/api/crimes-street-dates \\ --set contentType = \"application/json\" Fetch jpeg image from a URL. Use this image as payload. Set content type to image/jpeg . iter8 run --set url = http://127.0.0.1/post \\ --set payloadURL = https://cdn.pixabay.com/photo/2021/09/08/17/58/poppy-6607526_1280.jpg \\ --set contentType = \"image/jpeg\"","title":"Payload"},{"location":"tutorials/load-test-http/usage/#metrics-and-slos","text":"By default, the following metrics are collected by load-test-http : request-count : total number of requests sent error-count : number of error responses error-rate : fraction of error responses latency-mean : mean of observed latency values latency-stddev : standard deviation of observed latency values latency-min : min of observed latency values latency-max : max of observed latency values latency-pX : X th percentile of observed latency values, for X in [50.0, 75.0, 90.0, 95.0, 99.0, 99.9] In addition, any other latency percentiles that are specified as part of SLOs are also collected.","title":"Metrics and SLOs"},{"location":"tutorials/load-test-http/usage/#example","text":"iter8 run --set url = http://127.0.0.1/get \\ --set SLOs.error-rate = 0 \\ --set SLOs.latency-mean = 50 \\ --set SLOs.latency-p90 = 100 \\ --set SLOs.latency-p '97\\.5' = 200 In the above experiment, the following latency percentiles are collected and reported. [25.0, 50.0, 75.0, 90.0, 95.0, 97.5, 99.0, 99.9] The following SLOs are validated. error rate is 0 mean latency is under 50 msec 90 th percentile latency is under 100 msec 97.5 th percentile latency is under 200 msec The Iter8 experiment report contains metric values, and SLO validation results. HTML Text iter8 report -o html > report.html # open report.html with a browser. In MacOS, you can use the command: # open report.html The HTML report looks like this iter8 report The text report looks like this Experiment summary: ******************* Experiment completed: true No task failures: true Total number of tasks: 2 Number of completed tasks: 2 Whether or not service level objectives ( SLOs ) are satisfied: ************************************************************* SLO Conditions | Satisfied -------------- | --------- built-in/http-error-rate < = 0 | true built-in/http-latency-mean ( msec ) < = 50 | true built-in/http-latency-p90 ( msec ) < = 100 | true built-in/http-latency-p97.5 ( msec ) < = 200 | true Latest observed values for metrics: *********************************** Metric | value ------- | ----- built-in/http-error-count | 0 .00 built-in/http-error-rate | 0 .00 built-in/http-latency-max ( msec ) | 10 .95 built-in/http-latency-mean ( msec ) | 5 .72 built-in/http-latency-min ( msec ) | 2 .63 built-in/http-latency-p50 ( msec ) | 5 .75 built-in/http-latency-p75 ( msec ) | 6 .95 built-in/http-latency-p90 ( msec ) | 7 .88 built-in/http-latency-p95 ( msec ) | 8 .50 built-in/http-latency-p97.5 ( msec ) | 8 .92 built-in/http-latency-p99 ( msec ) | 10 .00 built-in/http-latency-p99.9 ( msec ) | 10 .85 built-in/http-latency-stddev ( msec ) | 1 .70 built-in/http-request-count | 100 .00","title":"Example"},{"location":"tutorials/load-test-http/usage/#assertions","text":"The iter8 assert subcommand asserts if experiment result satisfies the specified conditions. If assert conditions are satisfied, it exits with code 0 ; else, it exits with code 1 . Assertions are especially useful within CI/CD/GitOps pipelines. Assert that the sample experiment completed without failures, and all SLOs are satisfied. iter8 assert -c completed -c nofailure -c slos Sample output from Iter8 assert INFO [ 2021 -11-10 09 :33:12 ] experiment completed INFO [ 2021 -11-10 09 :33:12 ] experiment has no failure INFO [ 2021 -11-10 09 :33:12 ] SLOs are satisfied INFO [ 2021 -11-10 09 :33:12 ] all conditions were satisfied","title":"Assertions"},{"location":"user-guide/commands/iter8/","text":"iter8 \u00b6 Kubernetes Release Optimizer Synopsis \u00b6 Safely rollout new versions of apps and ML models. Maximize business value. Environment variables: Name Description $LOG_LEVEL Iter8 log level. Values are: Trace, Debug, Info (default), Warning, Error, Fatal and Panic. Options \u00b6 -h, --help help for iter8 SEE ALSO \u00b6 iter8 assert - Assert if experiment result satisfies the specified conditions iter8 gen - Render templates with values iter8 hub - Download an experiment chart from Iter8 hub iter8 k - Work with experiments running in Kubernetes iter8 report - View report from experiment result iter8 run - Render experiment.yaml and run the experiment. iter8 version - Print Iter8 version information Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8"},{"location":"user-guide/commands/iter8/#iter8","text":"Kubernetes Release Optimizer","title":"iter8"},{"location":"user-guide/commands/iter8/#synopsis","text":"Safely rollout new versions of apps and ML models. Maximize business value. Environment variables: Name Description $LOG_LEVEL Iter8 log level. Values are: Trace, Debug, Info (default), Warning, Error, Fatal and Panic.","title":"Synopsis"},{"location":"user-guide/commands/iter8/#options","text":"-h, --help help for iter8","title":"Options"},{"location":"user-guide/commands/iter8/#see-also","text":"iter8 assert - Assert if experiment result satisfies the specified conditions iter8 gen - Render templates with values iter8 hub - Download an experiment chart from Iter8 hub iter8 k - Work with experiments running in Kubernetes iter8 report - View report from experiment result iter8 run - Render experiment.yaml and run the experiment. iter8 version - Print Iter8 version information","title":"SEE ALSO"},{"location":"user-guide/commands/iter8/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_assert/","text":"iter8 assert \u00b6 Assert if experiment result satisfies the specified conditions Synopsis \u00b6 Assert if experiment result satisfies the specified conditions. If assert conditions are satisfied, exit with code 0. Else, exit with code 1. Assertions are especially useful within CI/CD/GitOps pipelines. iter8 assert [flags] Examples \u00b6 # assert that the experiment completed without failures, # and SLOs were satisfied iter8 assert -c completed -c nofailure -c slos # another way to write the above assertion iter8 assert -c completed,nofailure,slos # if the experiment involves multiple app versions, # SLOs can be asserted for individual versions # for example, the following command asserts that # SLOs are satisfied by version numbered 0 iter8 assert -c completed,nofailures,slosby=0 # timeouts are useful for an experiment that may be long running # and may run in the background iter8 assert -c completed,nofailures,slosby=0 -t 5s Options \u00b6 -c, --condition(s); can specify multiple or separate conditions with commas; strings completed | nofailure | slos | slosby=<version number> -h, --help help for assert -t, --timeout duration timeout duration (e.g., 5s) SEE ALSO \u00b6 iter8 - Kubernetes Release Optimizer Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 assert"},{"location":"user-guide/commands/iter8_assert/#iter8-assert","text":"Assert if experiment result satisfies the specified conditions","title":"iter8 assert"},{"location":"user-guide/commands/iter8_assert/#synopsis","text":"Assert if experiment result satisfies the specified conditions. If assert conditions are satisfied, exit with code 0. Else, exit with code 1. Assertions are especially useful within CI/CD/GitOps pipelines. iter8 assert [flags]","title":"Synopsis"},{"location":"user-guide/commands/iter8_assert/#examples","text":"# assert that the experiment completed without failures, # and SLOs were satisfied iter8 assert -c completed -c nofailure -c slos # another way to write the above assertion iter8 assert -c completed,nofailure,slos # if the experiment involves multiple app versions, # SLOs can be asserted for individual versions # for example, the following command asserts that # SLOs are satisfied by version numbered 0 iter8 assert -c completed,nofailures,slosby=0 # timeouts are useful for an experiment that may be long running # and may run in the background iter8 assert -c completed,nofailures,slosby=0 -t 5s","title":"Examples"},{"location":"user-guide/commands/iter8_assert/#options","text":"-c, --condition(s); can specify multiple or separate conditions with commas; strings completed | nofailure | slos | slosby=<version number> -h, --help help for assert -t, --timeout duration timeout duration (e.g., 5s)","title":"Options"},{"location":"user-guide/commands/iter8_assert/#see-also","text":"iter8 - Kubernetes Release Optimizer","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_assert/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_gen/","text":"iter8 gen \u00b6 Render templates with values Synopsis \u00b6 Render templates with values Options \u00b6 -h, --help help for gen --set stringArray set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) --set-file stringArray set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2) --set-string stringArray set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -f, --values strings specify values in a YAML file or a URL (can specify multiple) SEE ALSO \u00b6 iter8 - Kubernetes Release Optimizer iter8 gen k8s - Generate manifest for running experiment in Kubernetes Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 gen"},{"location":"user-guide/commands/iter8_gen/#iter8-gen","text":"Render templates with values","title":"iter8 gen"},{"location":"user-guide/commands/iter8_gen/#synopsis","text":"Render templates with values","title":"Synopsis"},{"location":"user-guide/commands/iter8_gen/#options","text":"-h, --help help for gen --set stringArray set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) --set-file stringArray set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2) --set-string stringArray set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -f, --values strings specify values in a YAML file or a URL (can specify multiple)","title":"Options"},{"location":"user-guide/commands/iter8_gen/#see-also","text":"iter8 - Kubernetes Release Optimizer iter8 gen k8s - Generate manifest for running experiment in Kubernetes","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_gen/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_gen_k8s/","text":"iter8 gen k8s \u00b6 Generate manifest for running experiment in Kubernetes iter8 gen k8s [flags] Examples \u00b6 # Generate Kubernetes manifest iter8 gen k8s Options \u00b6 -a, --app string app to be associated with an experiment (default \"default\") -h, --help help for k8s -i, --id string if not specified, a randomly generated identifier will be used Options inherited from parent commands \u00b6 --set stringArray set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) --set-file stringArray set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2) --set-string stringArray set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -f, --values strings specify values in a YAML file or a URL (can specify multiple) SEE ALSO \u00b6 iter8 gen - Render templates with values Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 gen k8s"},{"location":"user-guide/commands/iter8_gen_k8s/#iter8-gen-k8s","text":"Generate manifest for running experiment in Kubernetes iter8 gen k8s [flags]","title":"iter8 gen k8s"},{"location":"user-guide/commands/iter8_gen_k8s/#examples","text":"# Generate Kubernetes manifest iter8 gen k8s","title":"Examples"},{"location":"user-guide/commands/iter8_gen_k8s/#options","text":"-a, --app string app to be associated with an experiment (default \"default\") -h, --help help for k8s -i, --id string if not specified, a randomly generated identifier will be used","title":"Options"},{"location":"user-guide/commands/iter8_gen_k8s/#options-inherited-from-parent-commands","text":"--set stringArray set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) --set-file stringArray set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2) --set-string stringArray set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -f, --values strings specify values in a YAML file or a URL (can specify multiple)","title":"Options inherited from parent commands"},{"location":"user-guide/commands/iter8_gen_k8s/#see-also","text":"iter8 gen - Render templates with values","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_gen_k8s/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_hub/","text":"iter8 hub \u00b6 Download an experiment chart from Iter8 hub Synopsis \u00b6 Download an experiment chart from the Iter8 hub. This is useful for fetching experiments to inspect, modify, run, or repackage. By default, this command looks for the specified experiment chart in the public Iter8 hub. It is also possible to use third party hubs by setting the ITER8HUB environment variable. Environment variables: Name Description $ITER8HUB Iter8 hub location. Default value: github.com/iter8-tools/iter8.git//hub The Iter8 hub location follows the following syntax: HOST/OWNER/REPO[?ref=branch]//path-to-experiment-folder-relative-to-root-of-the-repo For example, the public Iter8 hub is located at: github.com/iter8-tools/iter8.git?ref=master//hub iter8 hub [flags] Examples \u00b6 # download the load-test-http experiment chart from the public Iter8 hub iter8 hub -e load-test-http # custom Iter8 hubs are simply github repos that host Iter8 experiment charts # Suppose you forked github.com/iter8-tools/iter8 under the GitHub account $GHUSER, # created a branch called 'ml', and pushed a new experiment chart # called 'tensorflow' under the path 'my/path/to/hub'. # It can now be downloaded as follows. export ITER8HUB=github.com/$GHUSER/iter8.git?ref=ml//my/path/to/hub iter8 hub -e tensorflow Options \u00b6 -e, --experiment string valid experiment chart located under hub -h, --help help for hub SEE ALSO \u00b6 iter8 - Kubernetes Release Optimizer Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 hub"},{"location":"user-guide/commands/iter8_hub/#iter8-hub","text":"Download an experiment chart from Iter8 hub","title":"iter8 hub"},{"location":"user-guide/commands/iter8_hub/#synopsis","text":"Download an experiment chart from the Iter8 hub. This is useful for fetching experiments to inspect, modify, run, or repackage. By default, this command looks for the specified experiment chart in the public Iter8 hub. It is also possible to use third party hubs by setting the ITER8HUB environment variable. Environment variables: Name Description $ITER8HUB Iter8 hub location. Default value: github.com/iter8-tools/iter8.git//hub The Iter8 hub location follows the following syntax: HOST/OWNER/REPO[?ref=branch]//path-to-experiment-folder-relative-to-root-of-the-repo For example, the public Iter8 hub is located at: github.com/iter8-tools/iter8.git?ref=master//hub iter8 hub [flags]","title":"Synopsis"},{"location":"user-guide/commands/iter8_hub/#examples","text":"# download the load-test-http experiment chart from the public Iter8 hub iter8 hub -e load-test-http # custom Iter8 hubs are simply github repos that host Iter8 experiment charts # Suppose you forked github.com/iter8-tools/iter8 under the GitHub account $GHUSER, # created a branch called 'ml', and pushed a new experiment chart # called 'tensorflow' under the path 'my/path/to/hub'. # It can now be downloaded as follows. export ITER8HUB=github.com/$GHUSER/iter8.git?ref=ml//my/path/to/hub iter8 hub -e tensorflow","title":"Examples"},{"location":"user-guide/commands/iter8_hub/#options","text":"-e, --experiment string valid experiment chart located under hub -h, --help help for hub","title":"Options"},{"location":"user-guide/commands/iter8_hub/#see-also","text":"iter8 - Kubernetes Release Optimizer","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_hub/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_k/","text":"iter8 k \u00b6 Work with experiments running in Kubernetes Examples \u00b6 To generate a Kubernetes manifest for an experiment in 'experiment.yaml', and run it in Kubernetes, do: iter8 gen k8s | kubectl apply -f - Options \u00b6 --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use -h, --help help for k --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server SEE ALSO \u00b6 iter8 - Kubernetes Release Optimizer iter8 k assert - Assert if experiment result satisfies the specified conditions iter8 k delete - Delete an experiment iter8 k get - Get the list of experiments running in Kubernetes iter8 k logs - Get logs of an experiment in Kubernetes iter8 k report - View report from experiment result Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 k"},{"location":"user-guide/commands/iter8_k/#iter8-k","text":"Work with experiments running in Kubernetes","title":"iter8 k"},{"location":"user-guide/commands/iter8_k/#examples","text":"To generate a Kubernetes manifest for an experiment in 'experiment.yaml', and run it in Kubernetes, do: iter8 gen k8s | kubectl apply -f -","title":"Examples"},{"location":"user-guide/commands/iter8_k/#options","text":"--as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use -h, --help help for k --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server","title":"Options"},{"location":"user-guide/commands/iter8_k/#see-also","text":"iter8 - Kubernetes Release Optimizer iter8 k assert - Assert if experiment result satisfies the specified conditions iter8 k delete - Delete an experiment iter8 k get - Get the list of experiments running in Kubernetes iter8 k logs - Get logs of an experiment in Kubernetes iter8 k report - View report from experiment result","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_k/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_k_assert/","text":"iter8 k assert \u00b6 Assert if experiment result satisfies the specified conditions Synopsis \u00b6 Assert if experiment result satisfies the specified conditions. If assert conditions are satisfied, exit with code 0. Else, exit with code 1. Assertions are especially useful within CI/CD/GitOps pipelines. iter8 k assert [flags] Examples \u00b6 # Assert that the most recent experiment has completed # without failure and its SLOs were satisfied for all versions iter8 k assert -c completed -c nofailure -c slos # Another way to express the same assertion iter8 k assert -c completed,nofailure,slos # Make assertion about the most recent experiment with app label $APP iter8 k assert -a $APP -c completed,nofailure,slos # For experiments with multiple versions, specify that the SLOs for one version were satisfied iter8 k assert -c completed,nofailure,slosby=0 # The above assertion for an experiment with identifier $ID iter8 k assert --id $ID -c completed,nofailure,slosby=0 # The above assertion with a runtime timeout iter8 k assert --id $ID -c completed,nofailure,slosby=0 -t 5s Options \u00b6 -a, --app string app label; this flag is ignored if --id flag is specified -c, --condition(s); can specify multiple or separate conditions with commas; strings completed | nofailure | slos | slosby=<version number> -h, --help help for assert -i, --id string experiment identifier; if not specified, the most recent experiment is used -t, --timeout duration timeout duration (e.g., 5s) Options inherited from parent commands \u00b6 --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server SEE ALSO \u00b6 iter8 k - Work with experiments running in Kubernetes Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 k assert"},{"location":"user-guide/commands/iter8_k_assert/#iter8-k-assert","text":"Assert if experiment result satisfies the specified conditions","title":"iter8 k assert"},{"location":"user-guide/commands/iter8_k_assert/#synopsis","text":"Assert if experiment result satisfies the specified conditions. If assert conditions are satisfied, exit with code 0. Else, exit with code 1. Assertions are especially useful within CI/CD/GitOps pipelines. iter8 k assert [flags]","title":"Synopsis"},{"location":"user-guide/commands/iter8_k_assert/#examples","text":"# Assert that the most recent experiment has completed # without failure and its SLOs were satisfied for all versions iter8 k assert -c completed -c nofailure -c slos # Another way to express the same assertion iter8 k assert -c completed,nofailure,slos # Make assertion about the most recent experiment with app label $APP iter8 k assert -a $APP -c completed,nofailure,slos # For experiments with multiple versions, specify that the SLOs for one version were satisfied iter8 k assert -c completed,nofailure,slosby=0 # The above assertion for an experiment with identifier $ID iter8 k assert --id $ID -c completed,nofailure,slosby=0 # The above assertion with a runtime timeout iter8 k assert --id $ID -c completed,nofailure,slosby=0 -t 5s","title":"Examples"},{"location":"user-guide/commands/iter8_k_assert/#options","text":"-a, --app string app label; this flag is ignored if --id flag is specified -c, --condition(s); can specify multiple or separate conditions with commas; strings completed | nofailure | slos | slosby=<version number> -h, --help help for assert -i, --id string experiment identifier; if not specified, the most recent experiment is used -t, --timeout duration timeout duration (e.g., 5s)","title":"Options"},{"location":"user-guide/commands/iter8_k_assert/#options-inherited-from-parent-commands","text":"--as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server","title":"Options inherited from parent commands"},{"location":"user-guide/commands/iter8_k_assert/#see-also","text":"iter8 k - Work with experiments running in Kubernetes","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_k_assert/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_k_delete/","text":"iter8 k delete \u00b6 Delete an experiment iter8 k delete [flags] Examples \u00b6 # Delete the most recent experiment iter8 k delete # Delete the most recent experiment with app label $APP iter8 k delete -a $APP # Delete experient with identifier $ID iter8 k delete --id $ID Options \u00b6 -a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for delete -i, --id string experiment identifier; if not specified, the most recent experiment is used Options inherited from parent commands \u00b6 --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server SEE ALSO \u00b6 iter8 k - Work with experiments running in Kubernetes Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 k delete"},{"location":"user-guide/commands/iter8_k_delete/#iter8-k-delete","text":"Delete an experiment iter8 k delete [flags]","title":"iter8 k delete"},{"location":"user-guide/commands/iter8_k_delete/#examples","text":"# Delete the most recent experiment iter8 k delete # Delete the most recent experiment with app label $APP iter8 k delete -a $APP # Delete experient with identifier $ID iter8 k delete --id $ID","title":"Examples"},{"location":"user-guide/commands/iter8_k_delete/#options","text":"-a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for delete -i, --id string experiment identifier; if not specified, the most recent experiment is used","title":"Options"},{"location":"user-guide/commands/iter8_k_delete/#options-inherited-from-parent-commands","text":"--as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server","title":"Options inherited from parent commands"},{"location":"user-guide/commands/iter8_k_delete/#see-also","text":"iter8 k - Work with experiments running in Kubernetes","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_k_delete/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_k_get/","text":"iter8 k get \u00b6 Get the list of experiments running in Kubernetes iter8 k get [flags] Examples \u00b6 # Get the list of experiments running in Kubernetes iter8 k get # Get list of experiments with app label $APP iter8 k get -a $APP Options \u00b6 -a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for get -i, --id string experiment identifier; if not specified, the most recent experiment is used Options inherited from parent commands \u00b6 --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server SEE ALSO \u00b6 iter8 k - Work with experiments running in Kubernetes Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 k get"},{"location":"user-guide/commands/iter8_k_get/#iter8-k-get","text":"Get the list of experiments running in Kubernetes iter8 k get [flags]","title":"iter8 k get"},{"location":"user-guide/commands/iter8_k_get/#examples","text":"# Get the list of experiments running in Kubernetes iter8 k get # Get list of experiments with app label $APP iter8 k get -a $APP","title":"Examples"},{"location":"user-guide/commands/iter8_k_get/#options","text":"-a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for get -i, --id string experiment identifier; if not specified, the most recent experiment is used","title":"Options"},{"location":"user-guide/commands/iter8_k_get/#options-inherited-from-parent-commands","text":"--as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server","title":"Options inherited from parent commands"},{"location":"user-guide/commands/iter8_k_get/#see-also","text":"iter8 k - Work with experiments running in Kubernetes","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_k_get/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_k_logs/","text":"iter8 k logs \u00b6 Get logs of an experiment in Kubernetes iter8 k logs [flags] Examples \u00b6 # Get logs of the most recent experiment started in Kubernetes iter8 k logs # Get logs of the most recent experiment with app label $APP iter8 k logs -a $APP # Get logs of the experiment in Kubernetes with identifier $ID iter8 k logs --id $ID Options \u00b6 -a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for logs -i, --id string experiment identifier; if not specified, the most recent experiment is used Options inherited from parent commands \u00b6 --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server SEE ALSO \u00b6 iter8 k - Work with experiments running in Kubernetes Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 k logs"},{"location":"user-guide/commands/iter8_k_logs/#iter8-k-logs","text":"Get logs of an experiment in Kubernetes iter8 k logs [flags]","title":"iter8 k logs"},{"location":"user-guide/commands/iter8_k_logs/#examples","text":"# Get logs of the most recent experiment started in Kubernetes iter8 k logs # Get logs of the most recent experiment with app label $APP iter8 k logs -a $APP # Get logs of the experiment in Kubernetes with identifier $ID iter8 k logs --id $ID","title":"Examples"},{"location":"user-guide/commands/iter8_k_logs/#options","text":"-a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for logs -i, --id string experiment identifier; if not specified, the most recent experiment is used","title":"Options"},{"location":"user-guide/commands/iter8_k_logs/#options-inherited-from-parent-commands","text":"--as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server","title":"Options inherited from parent commands"},{"location":"user-guide/commands/iter8_k_logs/#see-also","text":"iter8 k - Work with experiments running in Kubernetes","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_k_logs/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_k_report/","text":"iter8 k report \u00b6 View report from experiment result Synopsis \u00b6 View report from experiment result iter8 k report [flags] Examples \u00b6 # View a text report for the most recent experiment started in Kubernetes iter8 k report # View an html report for the most recent experiment iter8 k report -o html # View an html report for the most recent experiment with app label $APP iter8 k report -o html -a $APP # View an html report the experiment with identifier $ID iter8 k report -o html --id $ID Options \u00b6 -a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for report -i, --id string experiment identifier; if not specified, the most recent experiment is used -o, --outputFormat string text | html (default \"text\") Options inherited from parent commands \u00b6 --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server SEE ALSO \u00b6 iter8 k - Work with experiments running in Kubernetes Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 k report"},{"location":"user-guide/commands/iter8_k_report/#iter8-k-report","text":"View report from experiment result","title":"iter8 k report"},{"location":"user-guide/commands/iter8_k_report/#synopsis","text":"View report from experiment result iter8 k report [flags]","title":"Synopsis"},{"location":"user-guide/commands/iter8_k_report/#examples","text":"# View a text report for the most recent experiment started in Kubernetes iter8 k report # View an html report for the most recent experiment iter8 k report -o html # View an html report for the most recent experiment with app label $APP iter8 k report -o html -a $APP # View an html report the experiment with identifier $ID iter8 k report -o html --id $ID","title":"Examples"},{"location":"user-guide/commands/iter8_k_report/#options","text":"-a, --app string app label; this flag is ignored if --id flag is specified -h, --help help for report -i, --id string experiment identifier; if not specified, the most recent experiment is used -o, --outputFormat string text | html (default \"text\")","title":"Options"},{"location":"user-guide/commands/iter8_k_report/#options-inherited-from-parent-commands","text":"--as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default cache directory (default \"/Users/srinivasanparthasarathy/.kube/cache\") --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure --kubeconfig string Path to the kubeconfig file to use for CLI requests. -n, --namespace string If present, the namespace scope for this CLI request --password string Password for basic authentication to the API server --request-timeout string The length of time to wait before giving up on a single server request. Non-zero values should contain a corresponding time unit (e.g. 1s, 2m, 3h). A value of zero means don't timeout requests. (default \"0\") -s, --server string The address and port of the Kubernetes API server --tls-server-name string Server name to use for server certificate validation. If it is not provided, the hostname used to contact the server is used --token string Bearer token for authentication to the API server --user string The name of the kubeconfig user to use --username string Username for basic authentication to the API server","title":"Options inherited from parent commands"},{"location":"user-guide/commands/iter8_k_report/#see-also","text":"iter8 k - Work with experiments running in Kubernetes","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_k_report/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_report/","text":"iter8 report \u00b6 View report from experiment result Synopsis \u00b6 View report from experiment result iter8 report [flags] Examples \u00b6 # view text report iter8 report # view html report iter8 report -o html Options \u00b6 -h, --help help for report -o, --outputFormat string text | html (default \"text\") SEE ALSO \u00b6 iter8 - Kubernetes Release Optimizer Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 report"},{"location":"user-guide/commands/iter8_report/#iter8-report","text":"View report from experiment result","title":"iter8 report"},{"location":"user-guide/commands/iter8_report/#synopsis","text":"View report from experiment result iter8 report [flags]","title":"Synopsis"},{"location":"user-guide/commands/iter8_report/#examples","text":"# view text report iter8 report # view html report iter8 report -o html","title":"Examples"},{"location":"user-guide/commands/iter8_report/#options","text":"-h, --help help for report -o, --outputFormat string text | html (default \"text\")","title":"Options"},{"location":"user-guide/commands/iter8_report/#see-also","text":"iter8 - Kubernetes Release Optimizer","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_report/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_run/","text":"iter8 run \u00b6 Render experiment.yaml and run the experiment. Synopsis \u00b6 Render the file named \"experiment.yaml\" by combining an experiment chart with values, and run the experiment. This command is intended to be executed from the root of an Iter8 experiment chart. Values may be specified and are processed in the same manner as they are for Helm charts. iter8 run [flags] Examples \u00b6 # Render experiment.yaml and run the experiment iter8 run --set url=https://httpbin.org/get \\ --set SLOs.error-rate=0 \\ --set SLOs.latency-mean=50 \\ --set SLOs.latency-p90=100 \\ --set SLOs.latency-p'97\\.5'=200 Options \u00b6 --dry render experiment.yaml without running the experiment -h, --help help for run --set stringArray set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) --set-file stringArray set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2) --set-string stringArray set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -f, --values strings specify values in a YAML file or a URL (can specify multiple) SEE ALSO \u00b6 iter8 - Kubernetes Release Optimizer Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 run"},{"location":"user-guide/commands/iter8_run/#iter8-run","text":"Render experiment.yaml and run the experiment.","title":"iter8 run"},{"location":"user-guide/commands/iter8_run/#synopsis","text":"Render the file named \"experiment.yaml\" by combining an experiment chart with values, and run the experiment. This command is intended to be executed from the root of an Iter8 experiment chart. Values may be specified and are processed in the same manner as they are for Helm charts. iter8 run [flags]","title":"Synopsis"},{"location":"user-guide/commands/iter8_run/#examples","text":"# Render experiment.yaml and run the experiment iter8 run --set url=https://httpbin.org/get \\ --set SLOs.error-rate=0 \\ --set SLOs.latency-mean=50 \\ --set SLOs.latency-p90=100 \\ --set SLOs.latency-p'97\\.5'=200","title":"Examples"},{"location":"user-guide/commands/iter8_run/#options","text":"--dry render experiment.yaml without running the experiment -h, --help help for run --set stringArray set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) --set-file stringArray set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2) --set-string stringArray set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2) -f, --values strings specify values in a YAML file or a URL (can specify multiple)","title":"Options"},{"location":"user-guide/commands/iter8_run/#see-also","text":"iter8 - Kubernetes Release Optimizer","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_run/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"},{"location":"user-guide/commands/iter8_version/","text":"iter8 version \u00b6 Print Iter8 version information Synopsis \u00b6 Show the version for Iter8. iter8 version [flags] Examples \u00b6 iter8 version # The output will look like this: # version.BuildInfo{Version:\"v0.8.32\", GitCommit:\"fe51cd1e31e6a202cba7aliv9552a6d418ded79a\", GitTreeState:\"clean\", GoVersion:\"go1.17.6\"} # - Version is the semantic version of the release. # - GitCommit is the SHA for the commit that this version was built from. # - GitTreeState is \"clean\" if there are no local code changes when this binary was # built, and \"dirty\" if the binary was built from locally modified code. # - GoVersion is the version of Go that was used to compile Iter8. Options \u00b6 -h, --help help for version --short print the version number SEE ALSO \u00b6 iter8 - Kubernetes Release Optimizer Auto generated by spf13/cobra on 3-Feb-2022 \u00b6","title":"iter8 version"},{"location":"user-guide/commands/iter8_version/#iter8-version","text":"Print Iter8 version information","title":"iter8 version"},{"location":"user-guide/commands/iter8_version/#synopsis","text":"Show the version for Iter8. iter8 version [flags]","title":"Synopsis"},{"location":"user-guide/commands/iter8_version/#examples","text":"iter8 version # The output will look like this: # version.BuildInfo{Version:\"v0.8.32\", GitCommit:\"fe51cd1e31e6a202cba7aliv9552a6d418ded79a\", GitTreeState:\"clean\", GoVersion:\"go1.17.6\"} # - Version is the semantic version of the release. # - GitCommit is the SHA for the commit that this version was built from. # - GitTreeState is \"clean\" if there are no local code changes when this binary was # built, and \"dirty\" if the binary was built from locally modified code. # - GoVersion is the version of Go that was used to compile Iter8.","title":"Examples"},{"location":"user-guide/commands/iter8_version/#options","text":"-h, --help help for version --short print the version number","title":"Options"},{"location":"user-guide/commands/iter8_version/#see-also","text":"iter8 - Kubernetes Release Optimizer","title":"SEE ALSO"},{"location":"user-guide/commands/iter8_version/#auto-generated-by-spf13cobra-on-3-feb-2022","text":"","title":"Auto generated by spf13/cobra on 3-Feb-2022"}]}